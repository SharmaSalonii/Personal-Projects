CREATE DATABASE BIKESTORE;
USE BIKESTORE;
SELECT * FROM customers;
SELECT * FROM order_items;
SELECT * FROM brands;
SELECT * FROM orders;
SELECT * FROM categories;
SELECT * FROM products;
SELECT * FROM staffs;
SELECT * FROM stocks;
SELECT * FROM stores;

    #--Update table columm value--
SET SQL_SAFE_UPDATES = 0;
ALTER TABLE orders
MODIFY order_status VARCHAR(20);

UPDATE orders 
SET order_status=CASE
    WHEN order_status ='4' THEN "completed"
    WHEN order_status = '1' THEN "Pending"
    WHEN order_status = '2' THEN "Processing"
    WHEN order_status = '3' THEN "Rejected"
    ELSE order_status
END;
        #---Sales Analysis---
#1)What is the monthly sales trend for the past year?
SELECT
   date_format(o.order_date, '%Y-%m') AS month,
   sum(oi.quantity* oi.list_price *(1-oi.discount)) AS total_revenue
FROM
   orders AS o
JOIN
   order_items AS oi ON oi.order_id=o.order_id
WHERE year(o.order_date)='2018'
GROUP BY
    month
ORDER BY 
    month desc;

#2)How do discount rates affect the sales volume of products last year?
SELECT 
   oi.discount,sum(oi.quantity) AS total_quantity
FROM
   order_items AS oi
JOIN
   orders o ON oi.order_id=o.order_id
WHERE year(o.order_date)='2018'
GROUP BY 
   oi.discount
ORDER BY 
   oi.discount;

#3)What is the total discount amount given across all orders?
SELECT
    p.product_name,sum(oi.discount*oi.list_price*oi.quantity) AS total_discount
FROM
    products AS p
JOIN
    order_items AS oi ON oi.product_id=p.product_id
GROUP BY 
	p.product_name 
ORDER BY 
	total_discount desc;

#4)Which orders have the highest discount rates applied?
SELECT
    o.order_id,c.first_name,
    MAX(oi.discount) AS highest_discount_ratee
FROM
    order_items as oi
JOIN
    orders as o on oi.order_id=o.order_id
JOIN
    customers as c on c.customer_id=o.customer_id
GROUP BY 
	o.order_id, c.first_name;

#5)How does the list price of products correlate with their sales vol
SELECT 
    p.list_price, 
    SUM(oi.quantity) AS total_quantity_sold
FROM 
    products p
JOIN 
    order_items oi ON p.product_id = oi.product_id
GROUP BY 
    p.list_price
ORDER BY 
    p.list_price;
    
        #--CUSTOMER ANALYSIS--
#1)Which customers have placed the most orders?
SELECT
     o.customer_id,c.first_name ,count(order_id) AS order_count
FROM 
     orders AS o
INNER JOIN
     customers AS c ON o.customer_id=c.customer_id
GROUP BY
     o.customer_id,c.first_name
ORDER BY 
     order_count DESC;

#2)What is the average order value for each customer?
SELECT
	o.customer_id,c.first_name,o.order_id,
	AVG((ot.quantity*ot.list_price)*(1-ot.discount)) AS average_ordered_value
FROM 
	orders AS o
INNER JOIN
    customers AS c ON o.customer_id=c.customer_id
INNER JOIN 
     order_items AS ot ON o.order_id=ot.order_id
GROUP BY 
	o.customer_id ,o.order_id,c.first_name
ORDER BY 
    average_ordered_value DESC;

#3)Which customers have not placed any orders in the past year?
SELECT 
     cus.customer_id,ord.order_id,cus.first_name
FROM
     customers AS cus
LEFT JOIN
     orders AS ord ON cus.customer_id=ord.customer_id
WHERE
     ord.order_id IS NULL;
 
#4)Which cities have the highest number of customers?
SELECT
     city,count(customer_id) AS number_of_cust
FROM
     customers
GROUP BY 
     city
ORDER BY 
     number_of_cust DESC;

#5)What is the distribution of customers by state?
SELECT
     state,count(customer_id) AS number_of_cust
FROM
     customers
GROUP BY
	 state
ORDER BY  
      number_of_cust DESC;

      #--Order Analysis--
#1)What is the total number of orders placed in the last month?
SELECT 
     count(order_id) AS order_placed ,order_date
FROM 
     orders
WHERE  
     order_date=month(2018-12-28);
 
#2)What is the average order processing time (from order date to shipped date)?
SELECT 
     AVG(datediff(order_date,shipped_date)) AS avg_Processing_time
FROM
     orders
WHERE shipped_date IS NOT NULL;

#3)How many orders are currently in each order status (1: Pending, 2: Processing, 3: Rejected, 4: Completed)?
SELECT
     order_status,count(order_id)
FROM 
     orders
GROUP BY
	 order_status;

#4)What are the peak ordering times (days/times of highest order volumes)?
SELECT 
      DAYOFWEEK(order_date) AS day_of_week, COUNT(*) AS order_count
FROM 
      orders
GROUP BY 
      DAYOFWEEK(order_date)
ORDER BY 
      order_count DESC;

#5)Which stores have the highest numbers of orders?
SELECT
     stores.store_name,stores.store_id,
     count(order_items.order_id) AS number_of_orders
FROM
     stores
INNER JOIN
     stocks ON stores.store_id=stocks.store_id
LEFT JOIN
      order_items ON order_items.order_id=stocks.product_id
GROUP BY
      stores.store_name,stocks.store_id;

       #--Product Analysis--
#1)Which products have the highest sales volumne(quantity sold)?
SELECT 
     oi.product_id,p.product_name,sum(oi.quantity) AS total_quantity_sold,
	 p.product_name
FROM
     order_items AS oi
LEFT JOIN
     products AS p ON p.product_id=oi.product_id
GROUP BY
     oi.product_id,p.product_name
ORDER BY
     total_quantity_sold DESC ;

#2)What is the total revenue generated by each product?
SELECT
     p.product_name, (sum(ot.quantity*ot.list_price)*( 1- ot.discount)) AS revenue
FROM
	 products AS p
JOIN
     order_items AS ot ON p.product_id=ot.product_id
GROUP BY
     p.product_name
ORDER BY 
     revenue DESC;

#3)Which brands are the most popular based on sales volume?
SELECT
     p.brand_id,b.brand_name,sum(oi.quantity) AS total_quantity
FROM
     products  p
JOIN
     order_items oi ON p.product_id=oi.product_id
JOIN
     brands b ON b.brand_id=p.brand_id
GROUP BY
	 p.brand_id,b.brand_name
ORDER BY 
     total_quantity DESC;

#4)What is the distribution of product sales by category?
SELECT
     c.category_name,sum(oi.quantity) AS total_quantity_sold
FROM 
     categories c
JOIN 
     products p ON c.category_id = p.category_id
JOIN 
	 order_items oi ON p.product_id = oi.product_id
GROUP BY
     c.category_name
ORDER BY 
     total_quantity_sold DESC;

#5)How does sales volumne of products vary by model year?
select 
    p.product_name,p.model_year,
    sum(oi.quantity) AS total_quantity_sold
FROM
	products p
JOIN
    order_items oi ON p.product_id=oi.product_id
GROUP BY
    p.product_name,p.model_year
ORDER BY
    total_quantity_sold DESC;

        #---Inventory Analysis---
#1)Which products are currently out of stock in any store?
SELECT 
    s.store_id, s.quantity, p.product_id, p.product_name
FROM
    stocks AS s
        JOIN
    products AS p ON p.product_id = s.product_id
    where s.quantity=0;

#2)What is the total inventory value in each store?
SELECT    
    s.store_id,s.store_name,sum(st.quantity*p.list_price) 
FROM
    stores  s
JOIN
    stocks st ON st.store_id=s.store_id
JOIN
    products p ON st.product_id=p.product_id
GROUP BY
    s.store_id,s.store_name
ORDER BY  
    total_inventory_value DESC;

#3)Which stores have the highest inventory turnover rates?
SELECT 
    o.store_id, s.store_name, SUM(oi.quantity) / SUM(st.quantity) AS turnover_rate
FROM 
    orders o
JOIN 
    order_items oi ON o.order_id = oi.order_id
JOIN
	stocks st ON o.store_id = st.store_id AND oi.product_id = st.product_id
JOIN 
	stores s ON o.store_id = s.store_id
GROUP BY 
	o.store_id, s.store_name
ORDER BY 
    turnover_rate DESC;

#4)What is the average stock level for each product across all stores?
SELECT
     s.store_name,avg(st.quantity) as avg_stock_level,p.product_name
FROM
     stocks  st
JOIN
     products p ON p.product_id=st.product_id
JOIN
	 stores s ON s.store_id=st.store_id
GROUP BY 
     s.store_name,p.product_name
order by
     avg_stock_level DESC;

#5)Are there any products with consistently low stock levels across multiple stores?
SELECT
      s.store_name,AVG(st.quantity) AS avg_stock_level,p.product_name
FROM
      stocks st
JOIN
      products p ON p.product_id=st.product_id
JOIN
      stores s ON s.store_id=st.store_id
GROUP BY
      s.store_name,p.product_name
HAVING
      avg_stock_level<10
ORDER BY
      avg_stock_level ASC;

      #---Staff Analysis---
#1)Which staff members have handled the most orders?
SELECT
     o.staff_id,st.first_name,count(order_id) AS order_count
FROM
	 orders  o
JOIN 
     staffs st ON st.staff_id=o.staff_id
GROUP BY
     o.staff_id,st.first_name
ORDER BY 
     order_count;

#2)What is the average number of orders processed per staff member?
SELECT
     o.staff_id,st.first_name,
     count(order_id)/count(distinct o.order_id) AS avg_order_count
FROM
     orders  o
JOIN
     staffs  st ON st.staff_id=o.staff_id
GROUP BY
     o.staff_id,st.first_name
ORDER BY 
     avg_order_count;

#3)How does staff performance vary across different stores?
SELECT
     s.staff_id,st.store_name,count(o.order_id) AS order_count
FROM
     stores st
JOIN
     orders o ON st.store_id=o.store_id
JOIN
     staffs s ON s.staff_id=o.staff_id
GROUP BY
	s.staff_id,st.store_name
ORDER BY  
    order_count DESC;

#4)Are there any correlations between staff performance and order processing times?
SELECT
	s.staff_id, s.first_name, s.last_name, AVG(DATEDIFF(o.shipped_date, o.order_date)) AS avg_processing_time
FROM 
    staffs s
JOIN 
    orders o ON s.staff_id = o.staff_id
WHERE 
    o.shipped_date IS NOT NULL
GROUP BY 
    s.staff_id, s.first_name, s.last_name
ORDER BY 
    avg_processing_time ASC;

#5)Which staff members are managing multiple stores?
SELECT
    s.staff_id,s.first_name,s.last_name,
    COUNT(DISTINCT s.store_id) AS store_count
FROM
	staffs s
GROUP BY
    s.staff_id,s.first_name,s.last_name
HAVING
    store_count>1
ORDER BY
	store_count DESC;

          #---Store Analysis---
#1)Which stores have the highest total sales revenue?
SELECT 
    s.store_id, 
    s.store_name, 
    SUM(oi.quantity * oi.list_price * (1 - oi.discount)) AS total_revenue
FROM 
    stores s
JOIN 
    orders o ON s.store_id = o.store_id
JOIN 
    order_items oi ON o.order_id = oi.order_id
GROUP BY 
    s.store_id, s.store_name
ORDER BY 
    total_revenue DESC;
    
#2)What is the average number of orders per store?
SELECT
     s.store_id,s.store_name,avg(o.order_id) as avg_orders
FROM
     stores s 
JOIN 
     orders o ON s.store_id=o.store_id
GROUP BY
	 s.store_id,s.store_name
ORDER BY
	 avg_orders;

#3)How does customer satisfaction (based on order status) vary across stores?
SELECT
     o.order_status,s.store_id,s.store_name,count(o.order_id) as order_count
FROM
     orders o
JOIN
     stores s ON s.store_id=o.store_id
GROUP BY
     o.order_status,s.store_id,s.store_name
ORDER BY
     order_count DESC;

#4)What are the peak business minute for each store?
SELECT
     s.store_id,s.store_name,minute(o.order_date) AS minutes,
     count(o.order_id) AS order_count
FROM
     orders o
JOIN
     stores s ON s.store_id=o.store_id
GROUP BY
     s.store_id,s.store_name,minutes
ORDER BY
	order_count;

#5)Are there any trends in sales volume based on the location (city/state) of the stores?
SELECT
    s.store_id,s.store_name,s.city,s.state,
    SUM(oi.quantity * oi.list_price * (1 - oi.discount)) AS total_revenue
FROM
    stores s
JOIN
    orders o ON o.store_id=s.store_id
JOIN
    order_items oi ON oi.order_id=o.order_id
GROUP BY
    s.store_id,s.store_name,s.city,s.state
ORDER BY
    total_revenue;

         #---Category and Brand Analysis---
#1)Which product categories generate the most revenue?
SELECT
    c.category_name,c.category_id,
    SUM(oi.quantity * oi.list_price * (1 - oi.discount)) AS total_revenue
FROM
    categories c
JOIN
    products p ON c.category_id=p.category_id
JOIN
    order_items oi  ON oi.product_id=p.product_id
GROUP BY
	c.category_name,c.category_id
ORDER BY
    total_revenue;

#2)What is the sales distribution among different brands?
SELECT 
     b.brand_name, SUM(oi.quantity * oi.list_price * (1 - oi.discount)) AS total_revenue
FROM
     brands  b
JOIN
     products p ON p. brand_id=b.brand_id
JOIN
     order_items oi ON oi.product_id=p.product_id 
GROUP BY
     b.brand_name
ORDER BY 
     total_revenue DESC;

#3)How has the popularity of different categories changed year?
SELECT
     c.category_name,date_format(o.order_date , '%Y') AS Years,sum(oi.quantity) AS ordered_quantity
FROM
     categories c
JOIN
     products p ON p.category_id=c.category_id
JOIN
     order_items oi ON oi.product_id= p.product_id
JOIN
     orders o ON o.order_id=oi.order_id
GROUP BY
	c.category_name,Years
ORDER BY 
    ordered_quantity;

#4)Are there any brands that dominate specific categories?
SELECT
     b.brand_name,c.category_name,
     SUM(oi.quantity * oi.list_price * (1 - oi.discount)) AS total_revenue
FROM
     brands b
JOIN
     products p ON p.brand_id=b.brand_id
JOIN
     order_items oi ON oi.product_id=p.product_id
JOIN
     categories c ON c.category_id=p.category_id
GROUP BY
     b.brand_name,c.category_name
ORDER BY 
     c.category_name,total_revenue DESC;

#5)What is the average list price for products in each category?
SELECT
     p.product_name,c.category_name,AVG(p.list_price) AS avg_listprice
FROM
     products  p
JOIN
     categories c ON c.category_id=p.category_id
GROUP BY
     p.product_name,c.category_name
ORDER BY 
     avg_listprice;
